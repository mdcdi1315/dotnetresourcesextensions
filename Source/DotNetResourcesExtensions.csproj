<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="Current" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>$(NetCoreIdentifier);$(NetCoreWindowsIdentifier);netstandard2.0;$(NetFrameworkIdentifier)</TargetFrameworks>
	</PropertyGroup>

	<ItemGroup> <!-- All global package references used by the project should be here -->
	  <PackageReference Include="Microsoft.SourceLink.GitHub" Version="8.0.0" PrivateAssets="All" />
	  <PackageReference Include="System.Text.Json" Version="8.0.4" />
	  <PackageReference Include="System.Drawing.Primitives" Version="4.3.0" Condition="'$(TargetFramework)' == '$(NetCoreIdentifier)' OR '$(TargetFramework)' == 'netstandard2.0'" />
	</ItemGroup>

	<ItemGroup Condition="'$(TargetFramework.Contains(`$(NetCoreIdentifier)`))' != 'true'">
		<!-- 
			  These package references would fix compilation errors regarding strongly-typed resource classes generated by BuildTasks.
			  Exclude it when we are building for .NET 7 because .NET 7 has built-in support for these. 
		 -->
		<PackageReference Include="Microsoft.Bcl.AsyncInterfaces" Version="8.0.0" />
		<PackageReference Include="System.Threading.Tasks.Extensions" Version="4.5.4" />
		<PackageReference Include="System.Memory" Version="4.5.5" />
		<PackageReference Include="System.Runtime.CompilerServices.Unsafe" Version="6.0.0" />
	</ItemGroup>
	
	<PropertyGroup>
		<_ProjName>DotNetResourcesExtensions</_ProjName>
		<ImplicitUsings>disable</ImplicitUsings>
		<Nullable>annotations</Nullable>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<LangVersion>11</LangVersion>
		<PackageId>$(_ProjName)</PackageId>
		<IsPackable>True</IsPackable>
		<PackageReadmeFile>Pkg-Readme.md</PackageReadmeFile>
		<PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
		<PackageVersion>1.0.1</PackageVersion>
		<PackageTags>resources</PackageTags>
		<PackageIcon>ProjectImage.png</PackageIcon>
		<Description>$(_ProjName): A project that defines extensions and other stuff for .NET Resource API's!</Description>
		<PackageProjectUrl>http://github.com/mdcdi1315/dotnetresourcesextensions</PackageProjectUrl>
		<PackageReleaseNotes>v$(PackageVersion) release of DotNetResourcesExtensions package.
For more additional details , visit $(PackageProjectUrl) .
This release releases out the Human Readable Format resource classes
and changes how the JSON bytearray-based resources are written out.
Do not worry , you can still read the old method.
In the BuildTasks project the error handling is improved even further.
</PackageReleaseNotes>
		<Authors>mdcdi1315</Authors>
		<AssemblyName>$(_ProjName)</AssemblyName>
		<AssemblyVersion>1.0.0.2</AssemblyVersion>
		<ProductName>$(_ProjName)</ProductName>
		<Product>$(_ProjName) is a project that defines new possibilities on handling resources of a .NET application.
Additionally , it defines new types for doing resource serializations never thought of.
		</Product>
		<ProductVersion>1.0.0.2-beta</ProductVersion>
		<Company>© MDCDI1315. $(PackageProjectUrl)</Company>
		<Copyright>© MDCDI1315 (2024). All work is licensed under the MIT License.</Copyright>
		<GenerateDocumentationFile>True</GenerateDocumentationFile>
		<DebugType Condition="'$(Configuration)' == 'Debug'">Full</DebugType>
		<AssemblyOriginatorKeyFile>..\ProjectKey.snk</AssemblyOriginatorKeyFile>
		<SignAssembly>True</SignAssembly>
		<DebugType Condition="'$(Configuration)' == 'Debug'">Full</DebugType>
		<UseWPF Condition="'$(TargetFramework)' == '$(NetFrameworkIdentifier)' OR '$(TargetFramework)' == '$(NetCoreWindowsIdentifier)'">True</UseWPF>
	</PropertyGroup>

  <ItemGroup>
	<Compile Include="Localization\Exceptions.cs" />
	<Compile Include="Localization\LocalizableReaderWriter.cs" />
	<Compile Include="Localization\ILocalizedResourceEntry.cs" />
	<Compile Include="Localization\ILocalizationIndexResourceReaderWriter.cs" />
	<Compile Include="Localization\ILocalizedResourceEntryEnumerator.cs" />
	<Compile Include="Localization\LocalizableResourceLoader.cs" />
	<Compile Include="Localization\LocalizableXMLWriter.cs" />
	<Compile Include="Properties\AssemblyInfo.cs" />
	<Compile Include="$(MSBuildThisFileDirectory)\*.cs" />
	<Compile Include="$(MSBuildThisFileDirectory)\Internal\*.cs" />
	<Compile Include="$(MSBuildThisFileDirectory)\Internal\CustomResX\*.cs" />
	<!-- The System.Resources.Extensions code is built for all plaforms and is hosted in a DotNetResourcesExtensions namespace. -->
	<Compile Include="$(MSBuildThisFileDirectory)\Internal\DotNetResourcesrw\*.cs" />
	<None Include="Pkg-Readme.md" Pack="true" PackagePath="/" />
	<None Include="$(MSBuildThisFileDirectory)/../LICENSE.txt" Pack="true" PackagePath="/" />
	<None Include="$(MSBuildThisFileDirectory)/../ProjectImage.png" Pack="true" PackagePath="/" />
	<None Include="$(MSBuildThisFileDirectory)/../BuildTasks/bin/Release/net472/DotNetResourcesExtensions.targets" Pack="true" PackagePath="/buildTransitive/" />
    <None Include="$(MSBuildThisFileDirectory)/../BuildTasks/bin/Release/net472/DotNetResourcesExtensions*.dll" Pack="true" PackagePath="/tools/net472/" />
	<None Include="$(MSBuildThisFileDirectory)/../BuildTasks/bin/Release/netstandard2.0/DotNetResourcesExtensions*.dll" Pack="true" PackagePath="/tools/netstandard2.0/" />
  </ItemGroup>

	<ItemGroup Condition="'$(TargetFramework)' == '$(NetFrameworkIdentifier)' OR '$(TargetFramework)' == '$(MDCFRNetFrameworkIdentifier)'">
		<Reference Include="System.Windows.Forms" />
	</ItemGroup>

	<PropertyGroup Condition="'$(TargetFramework)' == '$(NetCoreWindowsIdentifier)'">
		<UseWindowsForms>true</UseWindowsForms>
	</PropertyGroup>

	<ItemGroup>
	  <EmbeddedResource Update="Properties\Resources.resx">
	    <SubType>Designer</SubType>
	  </EmbeddedResource>
	  <Compile Include="Properties\Resources.Designer.cs">
	    <DesignTime>True</DesignTime>
	    <AutoGen>True</AutoGen>
	    <DependentUpon>Resources.resx</DependentUpon>
	  </Compile>
	  <EmbeddedResource Include="Properties\Resources.resx" LogicalName="DotNetResourcesExtensions.Properties.Resources.resources">
	    <Generator>ResXFileCodeGenerator</Generator>
	    <LastGenOutput>Resources.Designer.cs</LastGenOutput>
	  </EmbeddedResource>
	</ItemGroup>

	<Target Name="DI_start" BeforeTargets="Build">
		<Message Importance="High" Text="The build will use as a package restore path the $(NuGetPackageRoot)." />
	</Target>
	
	<Target Name="DD_PackAdditional" BeforeTargets="GenerateNuspec">
		<MSBuild Projects="$(MSBuildThisFileDirectory)/../BuildTasks/BuildTasks.csproj" BuildInParallel="false" Properties="Configuration=Release" Targets="Restore;Build" UseResultsCache="true" />
		<Error Code="DNTRESEXT0222" Text="You must generate the BuildTasks assembly before packing up." Condition="'$([System.IO.File]::Exists(`$(MSBuildThisFileDirectory)/../BuildTasks/bin/Release/$(NetFrameworkIdentifier)/DotNetResourcesExtensions.BuildTasks.dll`))' != 'true'" />
	</Target>

	<!-- Generates a consumption layout to use it in your project directly without referencing the DotNetResourcesExtensions package. -->
	<!-- This allows you to consume nightly builds of DotNetResourcesExtensions. -->
	<!-- Additionally it will remove any package reference to DotNetResourcesExtensions if one is detected. -->
	<Target Name="GenerateStaticConsumptionLayout">
		<PropertyGroup>
			<StaticLayoutIntermediatePath>$(MSBuildThisFileDirectory)$(BaseIntermediateOutputPath)staticlayout</StaticLayoutIntermediatePath>
			<StaticLayoutOutputPath>$(MSBuildThisFileDirectory)bin/StaticLayout</StaticLayoutOutputPath>
			<BuildTasksBaseDirectory>$(MSBuildThisFileDirectory)../BuildTasks/bin/Release</BuildTasksBaseDirectory>
		</PropertyGroup>
		<RemoveDir Directories="$(StaticLayoutIntermediatePath);$(StaticLayoutOutputPath);$(MSBuildThisFileDirectory)bin" />
		<MakeDir Directories="$(StaticLayoutIntermediatePath);$(StaticLayoutIntermediatePath)/lib" />
		<Copy SourceFiles="DotNetResourcesExtensions.StaticLayout.targets" DestinationFolder="$(StaticLayoutIntermediatePath)" SkipUnchangedFiles="true" />
		<MSBuild Projects="$(MSBuildProjectFullPath);$(MSBuildThisFileDirectory)/../BuildTasks/BuildTasks.csproj" BuildInParallel="false" Targets="Restore;Build" RunEachTargetSeparately="true" Properties="Configuration=Release" />
		<Copy SourceFiles="$(BuildTasksBaseDirectory)/$(NetFrameworkIdentifier)/DotNetResourcesExtensions.BuildTasks.dll;$(BuildTasksBaseDirectory)/$(NetFrameworkIdentifier)/DotNetResourcesExtensions.dll" DestinationFolder="$(StaticLayoutIntermediatePath)/tools/net472" />
		<Copy SourceFiles="$(BuildTasksBaseDirectory)/netstandard2.0/DotNetResourcesExtensions.BuildTasks.dll;$(BuildTasksBaseDirectory)/netstandard2.0/DotNetResourcesExtensions.dll" DestinationFolder="$(StaticLayoutIntermediatePath)/tools/netstandard2.0" />
		<Copy SourceFiles="$(BuildTasksBaseDirectory)/$(NetFrameworkIdentifier)/DotNetResourcesExtensions.targets" DestinationFolder="$(StaticLayoutIntermediatePath)/build" />
		<Exec Command="1&gt;nul xcopy &quot;$(MSBuildThisFileDirectory)bin/Release&quot; &quot;$(StaticLayoutIntermediatePath)/lib&quot; /S /Q /I" Condition="'$(OS)' == 'Windows_NT'" />
		<Exec Command="cp -R $(MSBuildThisFileDirectory)bin/Release/ $(StaticLayoutIntermediatePath)/lib &gt; nul" Condition="'$(OS)' != 'Windows_NT'" />
		<Exec Command="1&gt;nul xcopy &quot;$(StaticLayoutIntermediatePath)&quot; &quot;$(StaticLayoutOutputPath)&quot; /S /Q /I" Condition="'$(OS)' == 'Windows_NT'" />
		<Exec Command="cp -R $(StaticLayoutIntermediatePath)/ $(StaticLayoutOutputPath) &gt; nul" Condition="'$(OS)' != 'Windows_NT'" />
		<Message Importance="high" Text="The requested static layout was generated at $(StaticLayoutOutputPath) ." />
	</Target>
	
</Project>
